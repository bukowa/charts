name: Renovate Chart

on:
  push:
    branches:
      - 'renovate/**'

jobs:

  matrix-job:
    name: Update Charts
    runs-on: ubuntu-latest
    if: needs.changed-files.outputs.any_changed == 'true'
    needs: [changed-files]
    strategy:
      matrix:
        charts: ${{ fromJSON(needs.changed-files.outputs.matrix) }}
      fail-fast: false

    steps:

      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Generate Changes
        run: |
          echo ${{ matrix.chart }}
          make generate-changelog
          make generate-helmdocs

      - name: Import GPG key
        id: import_gpg
        uses: crazy-max/ghaction-import-gpg@v5
        with:
          gpg_private_key: ${{ secrets.GPG_PRIVATE_KEY }}
          passphrase: ${{ secrets.GPG_PASSPHRASE }}
          git_commit_gpgsign: true
          git_push_gpgsign: true
          git_user_signingkey: true

      - name: Commit Changes
        run: |
          echo ${{ github.ref_name }}
          git add *
          git commit -m "Generated..." -a

      - name: Push Changes
        uses: ad-m/github-push-action@master
        with:
          github_token: "${{ secrets.GITHUB_TOKEN }}"
          branch: "${{ github.ref_name }}"

  changed-files:
    runs-on: ubuntu-latest
    name: Test changed-files
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
      any_changed: ${{ steps.changed-files-specific.outputs.any_changed }}
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Check changed charts
        id: changed-files-specific
        uses: tj-actions/changed-files@v32.1.0
        with:
          files: |
            charts/**
          json: true

      - id: set-matrix
        if: steps.changed-files-specific.outputs.any_changed == 'true'
        run: |
          set -eux
          DATA=$(echo ${{ steps.changed-files-specific.outputs.all_changed_files }} | jq -c '. | map(split("/")[1]) | unique')
          echo "matrix=$DATA" >> "$GITHUB_OUTPUT"
